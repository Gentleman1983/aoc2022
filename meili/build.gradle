import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
}

dependencies {
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.12.3'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '17'
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = TestExceptionFormat.FULL
        events("passed", "failed", "skipped")
    }

    reports {
        junitXml.required = true
        html.required = true
    }

    jacocoTestReport.dependsOn(it)
}

jacocoTestReport {
    reports {
        html.required.set(true)
        xml.required.set(true)
        xml.outputLocation.set(file("${buildDir}/jacoco/jacoco.xml"))
    }

    rootProject.tasks.sonar.dependsOn(it)
}



jar {
    manifest {
        attributes 'Implementation-Title': project.name
        attributes 'Implementation-Version': project.version
        attributes 'Main-Class': 'de.havox_design.aoc2022.meili.MainClass'
    }
}

application {
    mainClass = 'de.havox_design.aoc2022.meili.MainClass'
}
